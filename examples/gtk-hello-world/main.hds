import gtk as Gtk
import libc as c
import libc.{exit}

fn main(argc: i32, argv: **Byte): Void {
  val app = Gtk.application_new(c"org.gtk.example", Gtk.APPLICATION_FLAGS_NONE)
  val status = run(app, argc, argv)

  exit(status)
}


fn run(app: *Gtk.Application, argc: i32, argv: **Byte): i32 {
  Gtk.signal_connect(app, c"activate", Gtk.CALLBACK(on_app_activate), nullptr)
  return Gtk.application_run(app, argc, argv)
}

fn exit_button_on_click(button: *Gtk.Button, window: *Gtk.Window): Void {
  Gtk.print(c"Destroying window\n")
  Gtk.widget_destroy(window)
}

fn on_app_activate(app: *Gtk.Application, data: *Void): Void {
  val window = make_window(app)
  window.as_widget().show_all()
}

fn make_window(app: *Gtk.Application): *Gtk.Window {
  val window = app.new_window()
    .set_title(c"Window")
    .set_default_size(200, 200)

//   button_box = gtk_button_box_new (GTK_ORIENTATION_HORIZONTAL)
  window.add(
    Gtk.button_box_new(1)
      .add(
        Gtk.button_new_with_label(c"Exit")
            .connect(c"clicked", Gtk.CALLBACK(exit_button_on_click), pointer_cast[Void](window))
      )
      .add(Gtk.check_button_new_with_label(c"Check?"))
      .add(Gtk.progress_bar_new().set_text(c"Progress Bar"))

  )

  return window
}
