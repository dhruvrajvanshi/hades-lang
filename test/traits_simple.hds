import libc as c;

interface Convert[Self, Other] {
    fn convert(self: Self): Other;
}

fn main(): Void {
    c.puts(convert[*Byte, Bool](true));
    c.puts(convert[*Byte, Bool](false));
}

fn convert[U, T](t: T): U where Convert[T, U] {
    return Convert[T, U].convert(t);
}

implementation Convert[Bool, *Byte] {
    fn convert(self: Bool): *Byte {
        if self {
            return c"true";
        } else {
            return c"false";
        }
    }
}
