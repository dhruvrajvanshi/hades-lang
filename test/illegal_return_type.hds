
struct Box[T] {
    val value: T
}

type BoxAlias[T] = Box[T]

enum ST[T] {
    C(value: T)
}

fn main(): Void {
    val m = || -> || -> true
}

fn return_box(): BoxAlias[|| -> Bool] {
    return Box(|| true)
}

fn illegal_return(f: || -> ST[|| -> Bool])
    : ST[|| -> Bool] {
    return ST.C(|| true)
}
