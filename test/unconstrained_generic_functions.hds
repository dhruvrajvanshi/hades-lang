import libc as c;

fn main(): Void {
    c.puts(id(c"id"));
    c.puts(first(c"first", true));
    c.puts(second(false, c"second"));
    c.puts(second(true, StringPair(c"third", c"fourth")).first);
    fourth(true);
}

fn id[T](value: T): T {
    val copy: T = value;
    return copy;
}

fn first[A, B](first: A, second: B): A {
    return first;
}

fn second[A, B](first: A, second: B): B {
    return second;
}

fn fourth[T](value: T): T {
    c.puts(id(c"fourth"));
    val copy = id(value);
    c.puts(id(StringPair(c"fifth", c"sixth")).first);
    return value;
}

struct StringPair {
    val first: *Byte;
    val second: *Byte;
}
