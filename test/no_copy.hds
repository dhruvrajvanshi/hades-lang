import hadesx.no_copy.{NoCopy}

struct OwnPtr[T] {
    val _ptr: *mut T
}
implementation[T] NoCopy[OwnPtr[T]] {}

struct B {
    val mut x: OwnPtr[usize]
}

fn main(): Void {
    val x = OwnPtr[usize](nullptr)

    val y = x // not allowed
    val mut z = OwnPtr[usize](nullptr)

    z = x // not allowed

    foo(x) // not allowed

    val mut b = B(OwnPtr[usize](nullptr))
    b.x = x // not allowed
    val ptr_ = &mut b.x

    *ptr_ = x // not allowed

    *ptr_ = OwnPtr[usize](nullptr) // allowed because rvalue

    *ptr_ = b.x // not allowed because lvalue

    foo(move x) // allowed because move
}

fn foo(ptr: OwnPtr[usize]): Void {}
