// TODO: do something better here. This isn't portable.
type int = i32;
type uint = u32
type ulong = u64
type long = i64
type size_t = usize
type ssize_t = isize
type char = u8
type void = Void
type double = Double

extern fn puts(*char): void = puts;
extern fn exit(int): void = exit;
extern fn malloc(size_t): *mut void = malloc;
extern fn free(*mut void): void = free;
extern fn strlen(*char): ulong = strlen;
extern fn strcat(*char, *char): *mut char = strcat;
extern fn strcmp(*char, *char): int = strcmp;
extern fn strcpy(*mut char, *char): *mut char = strcpy;
extern fn memcpy(*void, *void, usize): void = memcpy;
extern fn memcmp(*void, *void, usize): int = memcmp;
extern fn floor(double): double = floor;

extern fn fprintf(*FILE, *char, *char): int = fprintf;
extern fn printf(*char, *char): int = printf;
extern fn sleep(uint): uint = sleep;
extern fn fflush(*FILE): void = fflush;

extern fn fputs(*char, *FILE): void = fputs;

struct FILE {}

extern fn getline(*mut *mut char, *mut usize, *FILE): isize = getline;
extern fn fgetc(*FILE): char = fgetc;
extern fn strtoul(*char, **char, u32): ulong = strtoul;


extern fn fread(*void, usize, usize, *FILE): usize = fread;

type FILEDescriptor = int;
extern fn read(FILEDescriptor, *mut void, usize): isize = read;
extern fn write(FILEDescriptor, *void, usize): isize = write;

extern fn errno(): int = hdc_errno;
extern fn strerror(int): *char = strerror;
extern fn set_errno(int): void = hdc_set_errno;

extern fn open(*char, int): int = open;

extern fn stdout(): *FILE = hdc_get_stdout;
extern const stdin: *FILE = stdin;
extern fn stderr(): *FILE = hdc_get_stderr;

extern fn perror(*char): void = perror;

extern fn listen(int, int): int = listen;

struct sockaddr {}
struct socklen_t {}
extern fn accept(int, *mut sockaddr, *mut socklen_t): int = accept;
extern fn close(int): int = close;


const EOF: int = -1

const SEEK_SET: int = 0
const SEEK_CUR: int = 1
const SEEK_END: int = 2

/// fseek(file, offset, whence)
/// whence should be SEEK_SET or SEEK_CUR or SEEK_END
extern fn fseek(*FILE, long, int): i32 = fseek

extern fn ftell(*FILE): long = ftell

/// fopen(file, mode)
extern fn fopen(*char, *char): *FILE = fopen
extern fn fclose(*FILE): int = fclose
extern fn rewind(*FILE): void = rewind
extern fn feof(*FILE): int = feof
extern fn ferror(*FILE): int = ferror
extern fn fileno(*FILE): int = fileno
extern fn abort(): void = abort

type pid_t = int
extern fn fork(): pid_t = fork

/// https://man7.org/linux/man-pages/man2/waitpid.2.html
extern fn waitpid(pid_t, *int, int): pid_t = waitpid
extern fn wait(*int): pid_t = wait
